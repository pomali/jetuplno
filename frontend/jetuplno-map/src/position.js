import React, { useState, useEffect } from "react";

const randomLat = Math.random();
const randomLong = Math.random();
function randomizeInDev(coords) {
  return {
    latitude: coords.latitude + randomLat * 0.2 - 0.1,
    longitude: coords.longitude + randomLong * 0.2 - 0.1,
    accuracy: coords.accuracy,
  };
}

export const usePosition = (getGpsPosition) => {
  const [position, setPosition] = useState({
    latitude: 48.145494,
    longitude: 17.1208062,
  });

  const onChange = ({ coords }) => {
    if (process.env.NODE_ENV === "development") {
      setPosition(randomizeInDev(coords));
    } else {
      setPosition({
        latitude: coords.latitude,
        longitude: coords.longitude,
        accuracy: coords.accurac,
      });
    }
  };

  // useEffect(() => {
  //   const id = setInterval(() => {
  //     setPosition((x) => ({
  //       latitude: x.latitude + 0.001,
  //       longitude: x.longitude + 0.001,
  //     }));
  //   }, 3000);
  //   return () => {
  //     clearInterval(id);
  //   };
  // }, []);

  useEffect(() => {
    const geo = navigator.geolocation;
    if (!geo) {
      setPosition((pos) => ({
        ...pos,
        error:
          "Toto zariadenie nepodporuje geolok√°ciu. Ak si na smarf√≥ne sk√∫s pou≈æi≈• nov≈°√≠ internetov√Ω prehliadaƒç.",
      }));
      return;
    }
    let watcher = null;
    if (getGpsPosition) {
      watcher = geo.watchPosition(onChange, (error) => {
        console.log(error);
        let x = "";
        switch (error.code) {
          case error.PERMISSION_DENIED:
            x = (
              <>
                <p>
                  Nedal si n√°m povolenie na pr√≠stup k tvojej polohe{" "}
                  <span role="img" aria-label="smutn√Ω emoji">
                    üòû
                  </span>
                </p>{" "}
                <p>
                  Pokraƒçujeme v obmedzenom re≈æime{" "}
                  <span role="img" aria-label="siln√Ω emoji">
                    üí™
                  </span>
                  , ale ak chce≈° odosiela≈• situ√°ciu na mieste kde sa nach√°dza≈°,
                  povoƒæ n√°m pr√≠stup ku geolok√°cii{" "}
                  <span role="img" aria-label="m√∫dry emoji">
                    ü§ì
                  </span>
                </p>
              </>
            );
            break;
          case error.POSITION_UNAVAILABLE:
            x = "Nastal probl√©m so z√≠skavan√≠m tvojej polohy üïµÔ∏è‚Äç‚ôÄÔ∏è";
            break;
          case error.TIMEOUT:
            x =
              "Nestihol si n√°m da≈• pr√≠stup ku polohe. Nabud√∫ce bude≈° r√Ωchlej≈°√≠ üòâ";
            break;
          case error.UNKNOWN_ERROR:
          default:
            x = "An unknown error occurred. ‚ÅâÔ∏è";
            break;
        }
        setPosition((pos) => ({
          ...pos,
          error: (
            <>
              {x} ({error.message})
            </>
          ),
          errorCode: error.code,
        }));
      });
    }
    return () => {
      if (watcher) {
        geo.clearWatch(watcher);
      }
    };
  }, [getGpsPosition]);

  return position;
};
